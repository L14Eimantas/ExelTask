@model ExelTask.Models.Mapping

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id) @*without this lost  Id*@
        <div class="form-group">
            @Html.LabelFor(model => model.MappingName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MappingName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MappingName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClieantName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ClieantName, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("ClieantName", new List<SelectListItem>{       @*DropDownList of Client*@
               new SelectListItem{Text="Client 1", Value="Client 1"},
               new SelectListItem{Text="Client 2", Value="Client 2"}
           }, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClieantName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModuleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("ModuleName", new List<SelectListItem>
           {
               new SelectListItem{Text="Module 1", Value="Module 1"},
               new SelectListItem{Text="Module 2", Value="Module 2"}
           }, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Cancel", "Index", null, new { @class = " btn btn-default" })
                <input type="submit" value="Continue" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
